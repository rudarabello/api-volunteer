generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model schedule {
  schedule_id       Int        @id(map: "schedule_pk") @default(autoincrement())
  user_volunteer_id Int
  work_front_id     Int
  date_to_work      DateTime   @db.Date
  time_to_work      DateTime   @db.Time(6)
  invite_accept     Boolean    @default(false)
  users             users      @relation(fields: [user_volunteer_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "schedule_fk0")
  work_front        work_front @relation(fields: [work_front_id], references: [work_front_id], onDelete: NoAction, onUpdate: NoAction, map: "schedule_fk1")
}

model users {
  user_id    Int          @id(map: "users_pk") @default(autoincrement())
  type       String       @db.VarChar(255)
  name       String       @db.VarChar(255)
  e_mail     String       @unique @map("e-mail") @db.VarChar(255)
  phone      String       @unique
  password   String       @db.VarChar(255)
  schedule   schedule[]
  volunterrs volunterrs[]
  work_front work_front[]
}

model volunterrs {
  volunteer_id  Int        @id(map: "volunterrs_pk") @default(autoincrement())
  user_id       Int
  work_front_id Int
  users         users      @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "volunterrs_fk0")
  work_front    work_front @relation(fields: [work_front_id], references: [work_front_id], onDelete: NoAction, onUpdate: NoAction, map: "volunterrs_fk1")
}

model work_front {
  work_front_id   Int          @id(map: "work_front_pk") @default(autoincrement())
  work_front_name String       @unique
  manager_id      Int
  users           users        @relation(fields: [manager_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "work_front_fk0")
  schedule        schedule[]
  volunterrs      volunterrs[]
}
